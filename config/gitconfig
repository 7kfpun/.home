[user]
    name = __GIT_NAME__
    email = __GIT_EMAIL__

[core]
    autocrlf = input
    editor = vim
    excludesfile = ~/.home/config/.gitignore
    filemode=true
    pager = /usr/bin/less
    sharedRepository=group
    whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol

[merge]
    tool = lvimdiff

[mergetool "lvimdiff"]
    cmd = "vim -d -c 'wincmd J' $MERGED $LOCAL $BASE $REMOTE"
    keepbackup = false

[diff]
    tool = vimdiff

[difftool]
    prompt = false

[color]
    ui = auto
    branch = auto
    diff = auto
    interactive = auto
    status = auto

[push]
    default = current
    ; default = matching

[alias]
    ; Show aliases
    alias = !git config --get-regexp alias | sed 's/alias\\.\\([^ ]*\\) \\(.*\\)/\\1 => \\2/' | sort

    ; Quickly add a file/dir to .gitignore
    ignore=!([ ! -e .gitignore ] && touch .gitignore) | echo $1 >>.gitignore

    ; Switch branch
    master = checkout master
    develop = checkout develop

    ; Common abbr
    a = add
    aa = add -A
    b = branch -a
    cm = commit -m
    co = checkout
    db = branch -D
    fo = fetch origin
    fot = git fetch origin --prune --tags
    po = remote prune origin
    mb = branch -m
    mg = merge --no-ff
    pd = pull origin develop
    ph = push --tags
    s = status -sb
    pr = pull --rebase
    new-tag-push = "!f() { git tag -f \"$1\" && git push origin :refs/tags/\"$1\" && git push origin refs/tags/\"$1\"; }; f"

    ; View logs and diff
    last = log -1 --stat
    hist = log --pretty=format:'%Cred%h%Creset %ad | %Cgreen%s%d%Creset [%an]' --graph --date=short
    ls = log --pretty=format:"%C(green)%ar\\ %C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn#%cE]" --decorate
    ll = log --pretty=format:"%C(green)%ar\\ %C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn#%cE]" --decorate --numstat
    lg = log -p --stat
    d = diff --word-diff
    dc = diff --staged
    tt = log --graph --decorate --oneline --all
    vd = difftool

    ; Git flow support
    hotfix = flow hotfix
    feature = flow feature
    release = flow release

    ; Undo
    amend = commit --amend -C HEAD
    undo = reset --soft HEAD^

    ; Ignore
    removeignore = rm --cached `git ls-files -i --exclude-from=.gitignore`

[branch "master"]
    remote = origin
    merge = refs/heads/master

[branch "develop"]
    remote = origin
    merge = refs/heads/develop

[fetch]
    ; recurseSubmodules = true

[help]
    autocorrect = 1

[gitflow "branch"]
    master = master
    develop = develop

[gitflow "prefix"]
    feature = feature/
    release = release/
    hotfix = hotfix/
    support = support/
    versiontag =

